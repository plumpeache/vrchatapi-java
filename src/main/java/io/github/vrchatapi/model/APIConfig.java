/*
 * VRChat API Documentation
 *
 * The version of the OpenAPI document: 1.17.6
 * Contact: vrchatapi.lpv0t@aries.fyi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.vrchatapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.vrchatapi.model.APIConfigAnnouncement;
import io.github.vrchatapi.model.APIConfigDownloadURLList;
import io.github.vrchatapi.model.APIConfigEvents;
import io.github.vrchatapi.model.DeploymentGroup;
import io.github.vrchatapi.model.DynamicContentRow;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.github.vrchatapi.JSON;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class APIConfig {
  public static final String SERIALIZED_NAME_VOICE_ENABLE_DEGRADATION = "VoiceEnableDegradation";
  @SerializedName(SERIALIZED_NAME_VOICE_ENABLE_DEGRADATION)
  private Boolean voiceEnableDegradation = false;

  public static final String SERIALIZED_NAME_VOICE_ENABLE_RECEIVER_LIMITING = "VoiceEnableReceiverLimiting";
  @SerializedName(SERIALIZED_NAME_VOICE_ENABLE_RECEIVER_LIMITING)
  private Boolean voiceEnableReceiverLimiting = true;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_ANNOUNCEMENTS = "announcements";
  @SerializedName(SERIALIZED_NAME_ANNOUNCEMENTS)
  private Set<APIConfigAnnouncement> announcements = new LinkedHashSet<>();

  public static final String SERIALIZED_NAME_APP_NAME = "appName";
  @SerializedName(SERIALIZED_NAME_APP_NAME)
  private String appName = "VrChat";

  public static final String SERIALIZED_NAME_BUILD_VERSION_TAG = "buildVersionTag";
  @SerializedName(SERIALIZED_NAME_BUILD_VERSION_TAG)
  private String buildVersionTag;

  public static final String SERIALIZED_NAME_CLIENT_API_KEY = "clientApiKey";
  @SerializedName(SERIALIZED_NAME_CLIENT_API_KEY)
  private String clientApiKey;

  public static final String SERIALIZED_NAME_CLIENT_B_P_S_CEILING = "clientBPSCeiling";
  @SerializedName(SERIALIZED_NAME_CLIENT_B_P_S_CEILING)
  private Integer clientBPSCeiling = 18432;

  public static final String SERIALIZED_NAME_CLIENT_DISCONNECT_TIMEOUT = "clientDisconnectTimeout";
  @SerializedName(SERIALIZED_NAME_CLIENT_DISCONNECT_TIMEOUT)
  private Integer clientDisconnectTimeout = 30000;

  public static final String SERIALIZED_NAME_CLIENT_RESERVED_PLAYER_B_P_S = "clientReservedPlayerBPS";
  @SerializedName(SERIALIZED_NAME_CLIENT_RESERVED_PLAYER_B_P_S)
  private Integer clientReservedPlayerBPS = 7168;

  public static final String SERIALIZED_NAME_CLIENT_SENT_COUNT_ALLOWANCE = "clientSentCountAllowance";
  @SerializedName(SERIALIZED_NAME_CLIENT_SENT_COUNT_ALLOWANCE)
  private Integer clientSentCountAllowance = 15;

  public static final String SERIALIZED_NAME_CONTACT_EMAIL = "contactEmail";
  @SerializedName(SERIALIZED_NAME_CONTACT_EMAIL)
  private String contactEmail;

  public static final String SERIALIZED_NAME_COPYRIGHT_EMAIL = "copyrightEmail";
  @SerializedName(SERIALIZED_NAME_COPYRIGHT_EMAIL)
  private String copyrightEmail;

  public static final String SERIALIZED_NAME_CURRENT_T_O_S_VERSION = "currentTOSVersion";
  @SerializedName(SERIALIZED_NAME_CURRENT_T_O_S_VERSION)
  private Integer currentTOSVersion;

  public static final String SERIALIZED_NAME_DEFAULT_AVATAR = "defaultAvatar";
  @SerializedName(SERIALIZED_NAME_DEFAULT_AVATAR)
  private String defaultAvatar;

  public static final String SERIALIZED_NAME_DEPLOYMENT_GROUP = "deploymentGroup";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_GROUP)
  private DeploymentGroup deploymentGroup = DeploymentGroup.BLUE;

  public static final String SERIALIZED_NAME_DEV_APP_VERSION_STANDALONE = "devAppVersionStandalone";
  @SerializedName(SERIALIZED_NAME_DEV_APP_VERSION_STANDALONE)
  private String devAppVersionStandalone;

  public static final String SERIALIZED_NAME_DEV_DOWNLOAD_LINK_WINDOWS = "devDownloadLinkWindows";
  @SerializedName(SERIALIZED_NAME_DEV_DOWNLOAD_LINK_WINDOWS)
  private String devDownloadLinkWindows;

  public static final String SERIALIZED_NAME_DEV_SDK_URL = "devSdkUrl";
  @SerializedName(SERIALIZED_NAME_DEV_SDK_URL)
  private String devSdkUrl;

  public static final String SERIALIZED_NAME_DEV_SDK_VERSION = "devSdkVersion";
  @SerializedName(SERIALIZED_NAME_DEV_SDK_VERSION)
  private String devSdkVersion;

  public static final String SERIALIZED_NAME_DEV_SERVER_VERSION_STANDALONE = "devServerVersionStandalone";
  @SerializedName(SERIALIZED_NAME_DEV_SERVER_VERSION_STANDALONE)
  private String devServerVersionStandalone;

  public static final String SERIALIZED_NAME_DIS_COUNTDOWN = "dis-countdown";
  @SerializedName(SERIALIZED_NAME_DIS_COUNTDOWN)
  private OffsetDateTime disCountdown;

  public static final String SERIALIZED_NAME_DISABLE_AVATAR_COPYING = "disableAvatarCopying";
  @SerializedName(SERIALIZED_NAME_DISABLE_AVATAR_COPYING)
  private Boolean disableAvatarCopying = false;

  public static final String SERIALIZED_NAME_DISABLE_AVATAR_GATING = "disableAvatarGating";
  @SerializedName(SERIALIZED_NAME_DISABLE_AVATAR_GATING)
  private Boolean disableAvatarGating = false;

  public static final String SERIALIZED_NAME_DISABLE_COMMUNITY_LABS = "disableCommunityLabs";
  @SerializedName(SERIALIZED_NAME_DISABLE_COMMUNITY_LABS)
  private Boolean disableCommunityLabs = false;

  public static final String SERIALIZED_NAME_DISABLE_COMMUNITY_LABS_PROMOTION = "disableCommunityLabsPromotion";
  @SerializedName(SERIALIZED_NAME_DISABLE_COMMUNITY_LABS_PROMOTION)
  private Boolean disableCommunityLabsPromotion = false;

  public static final String SERIALIZED_NAME_DISABLE_EMAIL = "disableEmail";
  @SerializedName(SERIALIZED_NAME_DISABLE_EMAIL)
  private Boolean disableEmail = false;

  public static final String SERIALIZED_NAME_DISABLE_EVENT_STREAM = "disableEventStream";
  @SerializedName(SERIALIZED_NAME_DISABLE_EVENT_STREAM)
  private Boolean disableEventStream = false;

  public static final String SERIALIZED_NAME_DISABLE_FEEDBACK_GATING = "disableFeedbackGating";
  @SerializedName(SERIALIZED_NAME_DISABLE_FEEDBACK_GATING)
  private Boolean disableFeedbackGating = false;

  public static final String SERIALIZED_NAME_DISABLE_FRONTEND_BUILDS = "disableFrontendBuilds";
  @SerializedName(SERIALIZED_NAME_DISABLE_FRONTEND_BUILDS)
  private Boolean disableFrontendBuilds = false;

  public static final String SERIALIZED_NAME_DISABLE_HELLO = "disableHello";
  @SerializedName(SERIALIZED_NAME_DISABLE_HELLO)
  private Boolean disableHello = false;

  public static final String SERIALIZED_NAME_DISABLE_OCULUS_SUBS = "disableOculusSubs";
  @SerializedName(SERIALIZED_NAME_DISABLE_OCULUS_SUBS)
  private Boolean disableOculusSubs = false;

  public static final String SERIALIZED_NAME_DISABLE_REGISTRATION = "disableRegistration";
  @SerializedName(SERIALIZED_NAME_DISABLE_REGISTRATION)
  private Boolean disableRegistration = false;

  public static final String SERIALIZED_NAME_DISABLE_STEAM_NETWORKING = "disableSteamNetworking";
  @SerializedName(SERIALIZED_NAME_DISABLE_STEAM_NETWORKING)
  private Boolean disableSteamNetworking = true;

  public static final String SERIALIZED_NAME_DISABLE_TWO_FACTOR_AUTH = "disableTwoFactorAuth";
  @SerializedName(SERIALIZED_NAME_DISABLE_TWO_FACTOR_AUTH)
  private Boolean disableTwoFactorAuth = false;

  public static final String SERIALIZED_NAME_DISABLE_UDON = "disableUdon";
  @SerializedName(SERIALIZED_NAME_DISABLE_UDON)
  private Boolean disableUdon = false;

  public static final String SERIALIZED_NAME_DISABLE_UPGRADE_ACCOUNT = "disableUpgradeAccount";
  @SerializedName(SERIALIZED_NAME_DISABLE_UPGRADE_ACCOUNT)
  private Boolean disableUpgradeAccount = false;

  public static final String SERIALIZED_NAME_DOWNLOAD_LINK_WINDOWS = "downloadLinkWindows";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_LINK_WINDOWS)
  private String downloadLinkWindows;

  public static final String SERIALIZED_NAME_DOWNLOAD_URLS = "downloadUrls";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_URLS)
  private APIConfigDownloadURLList downloadUrls;

  public static final String SERIALIZED_NAME_DYNAMIC_WORLD_ROWS = "dynamicWorldRows";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_WORLD_ROWS)
  private Set<DynamicContentRow> dynamicWorldRows = new LinkedHashSet<>();

  public static final String SERIALIZED_NAME_EVENTS = "events";
  @SerializedName(SERIALIZED_NAME_EVENTS)
  private APIConfigEvents events;

  public static final String SERIALIZED_NAME_GEAR_DEMO_ROOM_ID = "gearDemoRoomId";
  @SerializedName(SERIALIZED_NAME_GEAR_DEMO_ROOM_ID)
  private String gearDemoRoomId;

  public static final String SERIALIZED_NAME_HOME_WORLD_ID = "homeWorldId";
  @SerializedName(SERIALIZED_NAME_HOME_WORLD_ID)
  private String homeWorldId;

  public static final String SERIALIZED_NAME_HOMEPAGE_REDIRECT_TARGET = "homepageRedirectTarget";
  @SerializedName(SERIALIZED_NAME_HOMEPAGE_REDIRECT_TARGET)
  private String homepageRedirectTarget = "https://hello.vrchat.com";

  public static final String SERIALIZED_NAME_HUB_WORLD_ID = "hubWorldId";
  @SerializedName(SERIALIZED_NAME_HUB_WORLD_ID)
  private String hubWorldId;

  public static final String SERIALIZED_NAME_JOBS_EMAIL = "jobsEmail";
  @SerializedName(SERIALIZED_NAME_JOBS_EMAIL)
  private String jobsEmail;

  public static final String SERIALIZED_NAME_MESSAGE_OF_THE_DAY = "messageOfTheDay";
  @SerializedName(SERIALIZED_NAME_MESSAGE_OF_THE_DAY)
  private String messageOfTheDay;

  public static final String SERIALIZED_NAME_MODERATION_EMAIL = "moderationEmail";
  @SerializedName(SERIALIZED_NAME_MODERATION_EMAIL)
  private String moderationEmail;

  public static final String SERIALIZED_NAME_MODERATION_QUERY_PERIOD = "moderationQueryPeriod";
  @SerializedName(SERIALIZED_NAME_MODERATION_QUERY_PERIOD)
  private Integer moderationQueryPeriod;

  public static final String SERIALIZED_NAME_NOT_ALLOWED_TO_SELECT_AVATAR_IN_PRIVATE_WORLD_MESSAGE = "notAllowedToSelectAvatarInPrivateWorldMessage";
  @SerializedName(SERIALIZED_NAME_NOT_ALLOWED_TO_SELECT_AVATAR_IN_PRIVATE_WORLD_MESSAGE)
  private String notAllowedToSelectAvatarInPrivateWorldMessage;

  public static final String SERIALIZED_NAME_PLUGIN = "plugin";
  @SerializedName(SERIALIZED_NAME_PLUGIN)
  private String plugin;

  public static final String SERIALIZED_NAME_RELEASE_APP_VERSION_STANDALONE = "releaseAppVersionStandalone";
  @SerializedName(SERIALIZED_NAME_RELEASE_APP_VERSION_STANDALONE)
  private String releaseAppVersionStandalone;

  public static final String SERIALIZED_NAME_RELEASE_SDK_URL = "releaseSdkUrl";
  @SerializedName(SERIALIZED_NAME_RELEASE_SDK_URL)
  private String releaseSdkUrl;

  public static final String SERIALIZED_NAME_RELEASE_SDK_VERSION = "releaseSdkVersion";
  @SerializedName(SERIALIZED_NAME_RELEASE_SDK_VERSION)
  private String releaseSdkVersion;

  public static final String SERIALIZED_NAME_RELEASE_SERVER_VERSION_STANDALONE = "releaseServerVersionStandalone";
  @SerializedName(SERIALIZED_NAME_RELEASE_SERVER_VERSION_STANDALONE)
  private String releaseServerVersionStandalone;

  public static final String SERIALIZED_NAME_SDK_DEVELOPER_FAQ_URL = "sdkDeveloperFaqUrl";
  @SerializedName(SERIALIZED_NAME_SDK_DEVELOPER_FAQ_URL)
  private String sdkDeveloperFaqUrl;

  public static final String SERIALIZED_NAME_SDK_DISCORD_URL = "sdkDiscordUrl";
  @SerializedName(SERIALIZED_NAME_SDK_DISCORD_URL)
  private String sdkDiscordUrl;

  public static final String SERIALIZED_NAME_SDK_NOT_ALLOWED_TO_PUBLISH_MESSAGE = "sdkNotAllowedToPublishMessage";
  @SerializedName(SERIALIZED_NAME_SDK_NOT_ALLOWED_TO_PUBLISH_MESSAGE)
  private String sdkNotAllowedToPublishMessage;

  public static final String SERIALIZED_NAME_SDK_UNITY_VERSION = "sdkUnityVersion";
  @SerializedName(SERIALIZED_NAME_SDK_UNITY_VERSION)
  private String sdkUnityVersion;

  public static final String SERIALIZED_NAME_SERVER_NAME = "serverName";
  @SerializedName(SERIALIZED_NAME_SERVER_NAME)
  private String serverName;

  public static final String SERIALIZED_NAME_SUPPORT_EMAIL = "supportEmail";
  @SerializedName(SERIALIZED_NAME_SUPPORT_EMAIL)
  private String supportEmail;

  public static final String SERIALIZED_NAME_TIME_OUT_WORLD_ID = "timeOutWorldId";
  @SerializedName(SERIALIZED_NAME_TIME_OUT_WORLD_ID)
  private String timeOutWorldId;

  public static final String SERIALIZED_NAME_TUTORIAL_WORLD_ID = "tutorialWorldId";
  @SerializedName(SERIALIZED_NAME_TUTORIAL_WORLD_ID)
  private String tutorialWorldId;

  public static final String SERIALIZED_NAME_UPDATE_RATE_MS_MAXIMUM = "updateRateMsMaximum";
  @SerializedName(SERIALIZED_NAME_UPDATE_RATE_MS_MAXIMUM)
  private Integer updateRateMsMaximum;

  public static final String SERIALIZED_NAME_UPDATE_RATE_MS_MINIMUM = "updateRateMsMinimum";
  @SerializedName(SERIALIZED_NAME_UPDATE_RATE_MS_MINIMUM)
  private Integer updateRateMsMinimum;

  public static final String SERIALIZED_NAME_UPDATE_RATE_MS_NORMAL = "updateRateMsNormal";
  @SerializedName(SERIALIZED_NAME_UPDATE_RATE_MS_NORMAL)
  private Integer updateRateMsNormal;

  public static final String SERIALIZED_NAME_UPDATE_RATE_MS_UDON_MANUAL = "updateRateMsUdonManual";
  @SerializedName(SERIALIZED_NAME_UPDATE_RATE_MS_UDON_MANUAL)
  private Integer updateRateMsUdonManual;

  public static final String SERIALIZED_NAME_UPLOAD_ANALYSIS_PERCENT = "uploadAnalysisPercent";
  @SerializedName(SERIALIZED_NAME_UPLOAD_ANALYSIS_PERCENT)
  private Integer uploadAnalysisPercent;

  public static final String SERIALIZED_NAME_URL_LIST = "urlList";
  @SerializedName(SERIALIZED_NAME_URL_LIST)
  private List<String> urlList = new ArrayList<>();

  public static final String SERIALIZED_NAME_USE_RELIABLE_UDP_FOR_VOICE = "useReliableUdpForVoice";
  @SerializedName(SERIALIZED_NAME_USE_RELIABLE_UDP_FOR_VOICE)
  private Boolean useReliableUdpForVoice = false;

  public static final String SERIALIZED_NAME_USER_UPDATE_PERIOD = "userUpdatePeriod";
  @SerializedName(SERIALIZED_NAME_USER_UPDATE_PERIOD)
  private Integer userUpdatePeriod;

  public static final String SERIALIZED_NAME_USER_VERIFICATION_DELAY = "userVerificationDelay";
  @SerializedName(SERIALIZED_NAME_USER_VERIFICATION_DELAY)
  private Integer userVerificationDelay;

  public static final String SERIALIZED_NAME_USER_VERIFICATION_RETRY = "userVerificationRetry";
  @SerializedName(SERIALIZED_NAME_USER_VERIFICATION_RETRY)
  private Integer userVerificationRetry;

  public static final String SERIALIZED_NAME_USER_VERIFICATION_TIMEOUT = "userVerificationTimeout";
  @SerializedName(SERIALIZED_NAME_USER_VERIFICATION_TIMEOUT)
  private Integer userVerificationTimeout;

  public static final String SERIALIZED_NAME_VIVE_WINDOWS_URL = "viveWindowsUrl";
  @SerializedName(SERIALIZED_NAME_VIVE_WINDOWS_URL)
  private String viveWindowsUrl;

  public static final String SERIALIZED_NAME_WHITE_LISTED_ASSET_URLS = "whiteListedAssetUrls";
  @SerializedName(SERIALIZED_NAME_WHITE_LISTED_ASSET_URLS)
  private List<String> whiteListedAssetUrls = new ArrayList<>();

  public static final String SERIALIZED_NAME_WORLD_UPDATE_PERIOD = "worldUpdatePeriod";
  @SerializedName(SERIALIZED_NAME_WORLD_UPDATE_PERIOD)
  private Integer worldUpdatePeriod;

  public static final String SERIALIZED_NAME_PLAYER_URL_RESOLVER_HASH = "player-url-resolver-hash";
  @SerializedName(SERIALIZED_NAME_PLAYER_URL_RESOLVER_HASH)
  private String playerUrlResolverHash;

  public static final String SERIALIZED_NAME_PLAYER_URL_RESOLVER_VERSION = "player-url-resolver-version";
  @SerializedName(SERIALIZED_NAME_PLAYER_URL_RESOLVER_VERSION)
  private String playerUrlResolverVersion;

  public APIConfig() {
  }

  public APIConfig voiceEnableDegradation(Boolean voiceEnableDegradation) {
    
    this.voiceEnableDegradation = voiceEnableDegradation;
    return this;
  }

   /**
   * Unknown, probably voice optimization testing
   * @return voiceEnableDegradation
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown, probably voice optimization testing")

  public Boolean getVoiceEnableDegradation() {
    return voiceEnableDegradation;
  }


  public void setVoiceEnableDegradation(Boolean voiceEnableDegradation) {
    this.voiceEnableDegradation = voiceEnableDegradation;
  }


  public APIConfig voiceEnableReceiverLimiting(Boolean voiceEnableReceiverLimiting) {
    
    this.voiceEnableReceiverLimiting = voiceEnableReceiverLimiting;
    return this;
  }

   /**
   * Unknown, probably voice optimization testing
   * @return voiceEnableReceiverLimiting
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown, probably voice optimization testing")

  public Boolean getVoiceEnableReceiverLimiting() {
    return voiceEnableReceiverLimiting;
  }


  public void setVoiceEnableReceiverLimiting(Boolean voiceEnableReceiverLimiting) {
    this.voiceEnableReceiverLimiting = voiceEnableReceiverLimiting;
  }


  public APIConfig address(String address) {
    
    this.address = address;
    return this;
  }

   /**
   * VRChat&#39;s office address
   * @return address
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "VRChat's office address")

  public String getAddress() {
    return address;
  }


  public void setAddress(String address) {
    this.address = address;
  }


  public APIConfig announcements(Set<APIConfigAnnouncement> announcements) {
    
    this.announcements = announcements;
    return this;
  }

  public APIConfig addAnnouncementsItem(APIConfigAnnouncement announcementsItem) {
    this.announcements.add(announcementsItem);
    return this;
  }

   /**
   * Public Announcements
   * @return announcements
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Public Announcements")

  public Set<APIConfigAnnouncement> getAnnouncements() {
    return announcements;
  }


  public void setAnnouncements(Set<APIConfigAnnouncement> announcements) {
    this.announcements = announcements;
  }


  public APIConfig appName(String appName) {
    
    this.appName = appName;
    return this;
  }

   /**
   * Game name
   * @return appName
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Game name")

  public String getAppName() {
    return appName;
  }


  public void setAppName(String appName) {
    this.appName = appName;
  }


  public APIConfig buildVersionTag(String buildVersionTag) {
    
    this.buildVersionTag = buildVersionTag;
    return this;
  }

   /**
   * Build tag of the API server
   * @return buildVersionTag
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Build tag of the API server")

  public String getBuildVersionTag() {
    return buildVersionTag;
  }


  public void setBuildVersionTag(String buildVersionTag) {
    this.buildVersionTag = buildVersionTag;
  }


  public APIConfig clientApiKey(String clientApiKey) {
    
    this.clientApiKey = clientApiKey;
    return this;
  }

   /**
   * apiKey to be used for all other requests
   * @return clientApiKey
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "apiKey to be used for all other requests")

  public String getClientApiKey() {
    return clientApiKey;
  }


  public void setClientApiKey(String clientApiKey) {
    this.clientApiKey = clientApiKey;
  }


  public APIConfig clientBPSCeiling(Integer clientBPSCeiling) {
    
    this.clientBPSCeiling = clientBPSCeiling;
    return this;
  }

   /**
   * Unknown
   * @return clientBPSCeiling
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getClientBPSCeiling() {
    return clientBPSCeiling;
  }


  public void setClientBPSCeiling(Integer clientBPSCeiling) {
    this.clientBPSCeiling = clientBPSCeiling;
  }


  public APIConfig clientDisconnectTimeout(Integer clientDisconnectTimeout) {
    
    this.clientDisconnectTimeout = clientDisconnectTimeout;
    return this;
  }

   /**
   * Unknown
   * @return clientDisconnectTimeout
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getClientDisconnectTimeout() {
    return clientDisconnectTimeout;
  }


  public void setClientDisconnectTimeout(Integer clientDisconnectTimeout) {
    this.clientDisconnectTimeout = clientDisconnectTimeout;
  }


  public APIConfig clientReservedPlayerBPS(Integer clientReservedPlayerBPS) {
    
    this.clientReservedPlayerBPS = clientReservedPlayerBPS;
    return this;
  }

   /**
   * Unknown
   * @return clientReservedPlayerBPS
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getClientReservedPlayerBPS() {
    return clientReservedPlayerBPS;
  }


  public void setClientReservedPlayerBPS(Integer clientReservedPlayerBPS) {
    this.clientReservedPlayerBPS = clientReservedPlayerBPS;
  }


  public APIConfig clientSentCountAllowance(Integer clientSentCountAllowance) {
    
    this.clientSentCountAllowance = clientSentCountAllowance;
    return this;
  }

   /**
   * Unknown
   * @return clientSentCountAllowance
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getClientSentCountAllowance() {
    return clientSentCountAllowance;
  }


  public void setClientSentCountAllowance(Integer clientSentCountAllowance) {
    this.clientSentCountAllowance = clientSentCountAllowance;
  }


  public APIConfig contactEmail(String contactEmail) {
    
    this.contactEmail = contactEmail;
    return this;
  }

   /**
   * VRChat&#39;s contact email
   * @return contactEmail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "VRChat's contact email")

  public String getContactEmail() {
    return contactEmail;
  }


  public void setContactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
  }


  public APIConfig copyrightEmail(String copyrightEmail) {
    
    this.copyrightEmail = copyrightEmail;
    return this;
  }

   /**
   * VRChat&#39;s copyright-issues-related email
   * @return copyrightEmail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "VRChat's copyright-issues-related email")

  public String getCopyrightEmail() {
    return copyrightEmail;
  }


  public void setCopyrightEmail(String copyrightEmail) {
    this.copyrightEmail = copyrightEmail;
  }


  public APIConfig currentTOSVersion(Integer currentTOSVersion) {
    
    this.currentTOSVersion = currentTOSVersion;
    return this;
  }

   /**
   * Current version number of the Terms of Service
   * minimum: 0
   * @return currentTOSVersion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "7", required = true, value = "Current version number of the Terms of Service")

  public Integer getCurrentTOSVersion() {
    return currentTOSVersion;
  }


  public void setCurrentTOSVersion(Integer currentTOSVersion) {
    this.currentTOSVersion = currentTOSVersion;
  }


  public APIConfig defaultAvatar(String defaultAvatar) {
    
    this.defaultAvatar = defaultAvatar;
    return this;
  }

   /**
   * Get defaultAvatar
   * @return defaultAvatar
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "avtr_912d66a4-4714-43b8-8407-7de2cafbf55b", required = true, value = "")

  public String getDefaultAvatar() {
    return defaultAvatar;
  }


  public void setDefaultAvatar(String defaultAvatar) {
    this.defaultAvatar = defaultAvatar;
  }


  public APIConfig deploymentGroup(DeploymentGroup deploymentGroup) {
    
    this.deploymentGroup = deploymentGroup;
    return this;
  }

   /**
   * Get deploymentGroup
   * @return deploymentGroup
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public DeploymentGroup getDeploymentGroup() {
    return deploymentGroup;
  }


  public void setDeploymentGroup(DeploymentGroup deploymentGroup) {
    this.deploymentGroup = deploymentGroup;
  }


  public APIConfig devAppVersionStandalone(String devAppVersionStandalone) {
    
    this.devAppVersionStandalone = devAppVersionStandalone;
    return this;
  }

   /**
   * Version number for game development build
   * @return devAppVersionStandalone
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Version number for game development build")

  public String getDevAppVersionStandalone() {
    return devAppVersionStandalone;
  }


  public void setDevAppVersionStandalone(String devAppVersionStandalone) {
    this.devAppVersionStandalone = devAppVersionStandalone;
  }


  public APIConfig devDownloadLinkWindows(String devDownloadLinkWindows) {
    
    this.devDownloadLinkWindows = devDownloadLinkWindows;
    return this;
  }

   /**
   * Developer Download link
   * @return devDownloadLinkWindows
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Developer Download link")

  public String getDevDownloadLinkWindows() {
    return devDownloadLinkWindows;
  }


  public void setDevDownloadLinkWindows(String devDownloadLinkWindows) {
    this.devDownloadLinkWindows = devDownloadLinkWindows;
  }


  public APIConfig devSdkUrl(String devSdkUrl) {
    
    this.devSdkUrl = devSdkUrl;
    return this;
  }

   /**
   * Link to download the development SDK, use downloadUrls instead
   * @return devSdkUrl
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Link to download the development SDK, use downloadUrls instead")

  public String getDevSdkUrl() {
    return devSdkUrl;
  }


  public void setDevSdkUrl(String devSdkUrl) {
    this.devSdkUrl = devSdkUrl;
  }


  public APIConfig devSdkVersion(String devSdkVersion) {
    
    this.devSdkVersion = devSdkVersion;
    return this;
  }

   /**
   * Version of the development SDK
   * @return devSdkVersion
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Version of the development SDK")

  public String getDevSdkVersion() {
    return devSdkVersion;
  }


  public void setDevSdkVersion(String devSdkVersion) {
    this.devSdkVersion = devSdkVersion;
  }


  public APIConfig devServerVersionStandalone(String devServerVersionStandalone) {
    
    this.devServerVersionStandalone = devServerVersionStandalone;
    return this;
  }

   /**
   * Version number for server development build
   * @return devServerVersionStandalone
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Version number for server development build")

  public String getDevServerVersionStandalone() {
    return devServerVersionStandalone;
  }


  public void setDevServerVersionStandalone(String devServerVersionStandalone) {
    this.devServerVersionStandalone = devServerVersionStandalone;
  }


  public APIConfig disCountdown(OffsetDateTime disCountdown) {
    
    this.disCountdown = disCountdown;
    return this;
  }

   /**
   * Unknown, \&quot;dis\&quot; maybe for disconnect?
   * @return disCountdown
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown, \"dis\" maybe for disconnect?")

  public OffsetDateTime getDisCountdown() {
    return disCountdown;
  }


  public void setDisCountdown(OffsetDateTime disCountdown) {
    this.disCountdown = disCountdown;
  }


  public APIConfig disableAvatarCopying(Boolean disableAvatarCopying) {
    
    this.disableAvatarCopying = disableAvatarCopying;
    return this;
  }

   /**
   * Toggles if copying avatars should be disabled
   * @return disableAvatarCopying
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if copying avatars should be disabled")

  public Boolean getDisableAvatarCopying() {
    return disableAvatarCopying;
  }


  public void setDisableAvatarCopying(Boolean disableAvatarCopying) {
    this.disableAvatarCopying = disableAvatarCopying;
  }


  public APIConfig disableAvatarGating(Boolean disableAvatarGating) {
    
    this.disableAvatarGating = disableAvatarGating;
    return this;
  }

   /**
   * Toggles if avatar gating should be disabled. Avatar gating restricts uploading of avatars to people with the &#x60;system_avatar_access&#x60; Tag or &#x60;admin_avatar_access&#x60; Tag
   * @return disableAvatarGating
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if avatar gating should be disabled. Avatar gating restricts uploading of avatars to people with the `system_avatar_access` Tag or `admin_avatar_access` Tag")

  public Boolean getDisableAvatarGating() {
    return disableAvatarGating;
  }


  public void setDisableAvatarGating(Boolean disableAvatarGating) {
    this.disableAvatarGating = disableAvatarGating;
  }


  public APIConfig disableCommunityLabs(Boolean disableCommunityLabs) {
    
    this.disableCommunityLabs = disableCommunityLabs;
    return this;
  }

   /**
   * Toggles if the Community Labs should be disabled
   * @return disableCommunityLabs
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if the Community Labs should be disabled")

  public Boolean getDisableCommunityLabs() {
    return disableCommunityLabs;
  }


  public void setDisableCommunityLabs(Boolean disableCommunityLabs) {
    this.disableCommunityLabs = disableCommunityLabs;
  }


  public APIConfig disableCommunityLabsPromotion(Boolean disableCommunityLabsPromotion) {
    
    this.disableCommunityLabsPromotion = disableCommunityLabsPromotion;
    return this;
  }

   /**
   * Toggles if promotion out of Community Labs should be disabled
   * @return disableCommunityLabsPromotion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if promotion out of Community Labs should be disabled")

  public Boolean getDisableCommunityLabsPromotion() {
    return disableCommunityLabsPromotion;
  }


  public void setDisableCommunityLabsPromotion(Boolean disableCommunityLabsPromotion) {
    this.disableCommunityLabsPromotion = disableCommunityLabsPromotion;
  }


  public APIConfig disableEmail(Boolean disableEmail) {
    
    this.disableEmail = disableEmail;
    return this;
  }

   /**
   * Unknown
   * @return disableEmail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Boolean getDisableEmail() {
    return disableEmail;
  }


  public void setDisableEmail(Boolean disableEmail) {
    this.disableEmail = disableEmail;
  }


  public APIConfig disableEventStream(Boolean disableEventStream) {
    
    this.disableEventStream = disableEventStream;
    return this;
  }

   /**
   * Toggles if Analytics should be disabled.
   * @return disableEventStream
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if Analytics should be disabled.")

  public Boolean getDisableEventStream() {
    return disableEventStream;
  }


  public void setDisableEventStream(Boolean disableEventStream) {
    this.disableEventStream = disableEventStream;
  }


  public APIConfig disableFeedbackGating(Boolean disableFeedbackGating) {
    
    this.disableFeedbackGating = disableFeedbackGating;
    return this;
  }

   /**
   * Toggles if feedback gating should be disabled. Feedback gating restricts submission of feedback (reporting a World or User) to people with the &#x60;system_feedback_access&#x60; Tag.
   * @return disableFeedbackGating
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if feedback gating should be disabled. Feedback gating restricts submission of feedback (reporting a World or User) to people with the `system_feedback_access` Tag.")

  public Boolean getDisableFeedbackGating() {
    return disableFeedbackGating;
  }


  public void setDisableFeedbackGating(Boolean disableFeedbackGating) {
    this.disableFeedbackGating = disableFeedbackGating;
  }


  public APIConfig disableFrontendBuilds(Boolean disableFrontendBuilds) {
    
    this.disableFrontendBuilds = disableFrontendBuilds;
    return this;
  }

   /**
   * Unknown, probably toggles compilation of frontend web builds? So internal flag?
   * @return disableFrontendBuilds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown, probably toggles compilation of frontend web builds? So internal flag?")

  public Boolean getDisableFrontendBuilds() {
    return disableFrontendBuilds;
  }


  public void setDisableFrontendBuilds(Boolean disableFrontendBuilds) {
    this.disableFrontendBuilds = disableFrontendBuilds;
  }


  public APIConfig disableHello(Boolean disableHello) {
    
    this.disableHello = disableHello;
    return this;
  }

   /**
   * Unknown
   * @return disableHello
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Boolean getDisableHello() {
    return disableHello;
  }


  public void setDisableHello(Boolean disableHello) {
    this.disableHello = disableHello;
  }


  public APIConfig disableOculusSubs(Boolean disableOculusSubs) {
    
    this.disableOculusSubs = disableOculusSubs;
    return this;
  }

   /**
   * Toggles if signing up for Subscriptions in Oculus is disabled or not.
   * @return disableOculusSubs
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if signing up for Subscriptions in Oculus is disabled or not.")

  public Boolean getDisableOculusSubs() {
    return disableOculusSubs;
  }


  public void setDisableOculusSubs(Boolean disableOculusSubs) {
    this.disableOculusSubs = disableOculusSubs;
  }


  public APIConfig disableRegistration(Boolean disableRegistration) {
    
    this.disableRegistration = disableRegistration;
    return this;
  }

   /**
   * Toggles if new user account registration should be disabled.
   * @return disableRegistration
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if new user account registration should be disabled.")

  public Boolean getDisableRegistration() {
    return disableRegistration;
  }


  public void setDisableRegistration(Boolean disableRegistration) {
    this.disableRegistration = disableRegistration;
  }


  public APIConfig disableSteamNetworking(Boolean disableSteamNetworking) {
    
    this.disableSteamNetworking = disableSteamNetworking;
    return this;
  }

   /**
   * Toggles if Steam Networking should be disabled. VRChat these days uses Photon Unity Networking (PUN) instead.
   * @return disableSteamNetworking
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if Steam Networking should be disabled. VRChat these days uses Photon Unity Networking (PUN) instead.")

  public Boolean getDisableSteamNetworking() {
    return disableSteamNetworking;
  }


  public void setDisableSteamNetworking(Boolean disableSteamNetworking) {
    this.disableSteamNetworking = disableSteamNetworking;
  }


  public APIConfig disableTwoFactorAuth(Boolean disableTwoFactorAuth) {
    
    this.disableTwoFactorAuth = disableTwoFactorAuth;
    return this;
  }

   /**
   * Toggles if 2FA should be disabled.
   * @return disableTwoFactorAuth
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if 2FA should be disabled.")

  public Boolean getDisableTwoFactorAuth() {
    return disableTwoFactorAuth;
  }


  public void setDisableTwoFactorAuth(Boolean disableTwoFactorAuth) {
    this.disableTwoFactorAuth = disableTwoFactorAuth;
  }


  public APIConfig disableUdon(Boolean disableUdon) {
    
    this.disableUdon = disableUdon;
    return this;
  }

   /**
   * Toggles if Udon should be universally disabled in-game.
   * @return disableUdon
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if Udon should be universally disabled in-game.")

  public Boolean getDisableUdon() {
    return disableUdon;
  }


  public void setDisableUdon(Boolean disableUdon) {
    this.disableUdon = disableUdon;
  }


  public APIConfig disableUpgradeAccount(Boolean disableUpgradeAccount) {
    
    this.disableUpgradeAccount = disableUpgradeAccount;
    return this;
  }

   /**
   * Toggles if account upgrading \&quot;linking with Steam/Oculus\&quot; should be disabled.
   * @return disableUpgradeAccount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if account upgrading \"linking with Steam/Oculus\" should be disabled.")

  public Boolean getDisableUpgradeAccount() {
    return disableUpgradeAccount;
  }


  public void setDisableUpgradeAccount(Boolean disableUpgradeAccount) {
    this.disableUpgradeAccount = disableUpgradeAccount;
  }


  public APIConfig downloadLinkWindows(String downloadLinkWindows) {
    
    this.downloadLinkWindows = downloadLinkWindows;
    return this;
  }

   /**
   * Download link for game on the Oculus Rift website.
   * @return downloadLinkWindows
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Download link for game on the Oculus Rift website.")

  public String getDownloadLinkWindows() {
    return downloadLinkWindows;
  }


  public void setDownloadLinkWindows(String downloadLinkWindows) {
    this.downloadLinkWindows = downloadLinkWindows;
  }


  public APIConfig downloadUrls(APIConfigDownloadURLList downloadUrls) {
    
    this.downloadUrls = downloadUrls;
    return this;
  }

   /**
   * Get downloadUrls
   * @return downloadUrls
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public APIConfigDownloadURLList getDownloadUrls() {
    return downloadUrls;
  }


  public void setDownloadUrls(APIConfigDownloadURLList downloadUrls) {
    this.downloadUrls = downloadUrls;
  }


  public APIConfig dynamicWorldRows(Set<DynamicContentRow> dynamicWorldRows) {
    
    this.dynamicWorldRows = dynamicWorldRows;
    return this;
  }

  public APIConfig addDynamicWorldRowsItem(DynamicContentRow dynamicWorldRowsItem) {
    this.dynamicWorldRows.add(dynamicWorldRowsItem);
    return this;
  }

   /**
   * Array of DynamicWorldRow objects, used by the game to display the list of world rows
   * @return dynamicWorldRows
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Array of DynamicWorldRow objects, used by the game to display the list of world rows")

  public Set<DynamicContentRow> getDynamicWorldRows() {
    return dynamicWorldRows;
  }


  public void setDynamicWorldRows(Set<DynamicContentRow> dynamicWorldRows) {
    this.dynamicWorldRows = dynamicWorldRows;
  }


  public APIConfig events(APIConfigEvents events) {
    
    this.events = events;
    return this;
  }

   /**
   * Get events
   * @return events
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public APIConfigEvents getEvents() {
    return events;
  }


  public void setEvents(APIConfigEvents events) {
    this.events = events;
  }


  public APIConfig gearDemoRoomId(String gearDemoRoomId) {
    
    this.gearDemoRoomId = gearDemoRoomId;
    return this;
  }

   /**
   * Unknown
   * @return gearDemoRoomId
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public String getGearDemoRoomId() {
    return gearDemoRoomId;
  }


  public void setGearDemoRoomId(String gearDemoRoomId) {
    this.gearDemoRoomId = gearDemoRoomId;
  }


  public APIConfig homeWorldId(String homeWorldId) {
    
    this.homeWorldId = homeWorldId;
    return this;
  }

   /**
   * WorldID be \&quot;offline\&quot; on User profiles if you are not friends with that user.
   * @return homeWorldId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "wrld_ba913a96-fac4-4048-a062-9aa5db092812", required = true, value = "WorldID be \"offline\" on User profiles if you are not friends with that user.")

  public String getHomeWorldId() {
    return homeWorldId;
  }


  public void setHomeWorldId(String homeWorldId) {
    this.homeWorldId = homeWorldId;
  }


  public APIConfig homepageRedirectTarget(String homepageRedirectTarget) {
    
    this.homepageRedirectTarget = homepageRedirectTarget;
    return this;
  }

   /**
   * Redirect target if you try to open the base API domain in your browser
   * @return homepageRedirectTarget
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Redirect target if you try to open the base API domain in your browser")

  public String getHomepageRedirectTarget() {
    return homepageRedirectTarget;
  }


  public void setHomepageRedirectTarget(String homepageRedirectTarget) {
    this.homepageRedirectTarget = homepageRedirectTarget;
  }


  public APIConfig hubWorldId(String hubWorldId) {
    
    this.hubWorldId = hubWorldId;
    return this;
  }

   /**
   * WorldID be \&quot;offline\&quot; on User profiles if you are not friends with that user.
   * @return hubWorldId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "wrld_ba913a96-fac4-4048-a062-9aa5db092812", required = true, value = "WorldID be \"offline\" on User profiles if you are not friends with that user.")

  public String getHubWorldId() {
    return hubWorldId;
  }


  public void setHubWorldId(String hubWorldId) {
    this.hubWorldId = hubWorldId;
  }


  public APIConfig jobsEmail(String jobsEmail) {
    
    this.jobsEmail = jobsEmail;
    return this;
  }

   /**
   * VRChat&#39;s job application email
   * @return jobsEmail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "VRChat's job application email")

  public String getJobsEmail() {
    return jobsEmail;
  }


  public void setJobsEmail(String jobsEmail) {
    this.jobsEmail = jobsEmail;
  }


  public APIConfig messageOfTheDay(String messageOfTheDay) {
    
    this.messageOfTheDay = messageOfTheDay;
    return this;
  }

   /**
   * MOTD
   * @return messageOfTheDay
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "MOTD")

  public String getMessageOfTheDay() {
    return messageOfTheDay;
  }


  public void setMessageOfTheDay(String messageOfTheDay) {
    this.messageOfTheDay = messageOfTheDay;
  }


  public APIConfig moderationEmail(String moderationEmail) {
    
    this.moderationEmail = moderationEmail;
    return this;
  }

   /**
   * VRChat&#39;s moderation related email
   * @return moderationEmail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "VRChat's moderation related email")

  public String getModerationEmail() {
    return moderationEmail;
  }


  public void setModerationEmail(String moderationEmail) {
    this.moderationEmail = moderationEmail;
  }


  public APIConfig moderationQueryPeriod(Integer moderationQueryPeriod) {
    
    this.moderationQueryPeriod = moderationQueryPeriod;
    return this;
  }

   /**
   * Unknown
   * @return moderationQueryPeriod
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getModerationQueryPeriod() {
    return moderationQueryPeriod;
  }


  public void setModerationQueryPeriod(Integer moderationQueryPeriod) {
    this.moderationQueryPeriod = moderationQueryPeriod;
  }


  public APIConfig notAllowedToSelectAvatarInPrivateWorldMessage(String notAllowedToSelectAvatarInPrivateWorldMessage) {
    
    this.notAllowedToSelectAvatarInPrivateWorldMessage = notAllowedToSelectAvatarInPrivateWorldMessage;
    return this;
  }

   /**
   * Used in-game to notify a user they aren&#39;t allowed to select avatars in private worlds
   * @return notAllowedToSelectAvatarInPrivateWorldMessage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Used in-game to notify a user they aren't allowed to select avatars in private worlds")

  public String getNotAllowedToSelectAvatarInPrivateWorldMessage() {
    return notAllowedToSelectAvatarInPrivateWorldMessage;
  }


  public void setNotAllowedToSelectAvatarInPrivateWorldMessage(String notAllowedToSelectAvatarInPrivateWorldMessage) {
    this.notAllowedToSelectAvatarInPrivateWorldMessage = notAllowedToSelectAvatarInPrivateWorldMessage;
  }


  public APIConfig plugin(String plugin) {
    
    this.plugin = plugin;
    return this;
  }

   /**
   * Extra [plugin](https://doc.photonengine.com/en-us/server/current/plugins/manual) to run in each instance
   * @return plugin
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Extra [plugin](https://doc.photonengine.com/en-us/server/current/plugins/manual) to run in each instance")

  public String getPlugin() {
    return plugin;
  }


  public void setPlugin(String plugin) {
    this.plugin = plugin;
  }


  public APIConfig releaseAppVersionStandalone(String releaseAppVersionStandalone) {
    
    this.releaseAppVersionStandalone = releaseAppVersionStandalone;
    return this;
  }

   /**
   * Version number for game release build
   * @return releaseAppVersionStandalone
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Version number for game release build")

  public String getReleaseAppVersionStandalone() {
    return releaseAppVersionStandalone;
  }


  public void setReleaseAppVersionStandalone(String releaseAppVersionStandalone) {
    this.releaseAppVersionStandalone = releaseAppVersionStandalone;
  }


  public APIConfig releaseSdkUrl(String releaseSdkUrl) {
    
    this.releaseSdkUrl = releaseSdkUrl;
    return this;
  }

   /**
   * Link to download the release SDK
   * @return releaseSdkUrl
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Link to download the release SDK")

  public String getReleaseSdkUrl() {
    return releaseSdkUrl;
  }


  public void setReleaseSdkUrl(String releaseSdkUrl) {
    this.releaseSdkUrl = releaseSdkUrl;
  }


  public APIConfig releaseSdkVersion(String releaseSdkVersion) {
    
    this.releaseSdkVersion = releaseSdkVersion;
    return this;
  }

   /**
   * Version of the release SDK
   * @return releaseSdkVersion
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Version of the release SDK")

  public String getReleaseSdkVersion() {
    return releaseSdkVersion;
  }


  public void setReleaseSdkVersion(String releaseSdkVersion) {
    this.releaseSdkVersion = releaseSdkVersion;
  }


  public APIConfig releaseServerVersionStandalone(String releaseServerVersionStandalone) {
    
    this.releaseServerVersionStandalone = releaseServerVersionStandalone;
    return this;
  }

   /**
   * Version number for server release build
   * @return releaseServerVersionStandalone
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Version number for server release build")

  public String getReleaseServerVersionStandalone() {
    return releaseServerVersionStandalone;
  }


  public void setReleaseServerVersionStandalone(String releaseServerVersionStandalone) {
    this.releaseServerVersionStandalone = releaseServerVersionStandalone;
  }


  public APIConfig sdkDeveloperFaqUrl(String sdkDeveloperFaqUrl) {
    
    this.sdkDeveloperFaqUrl = sdkDeveloperFaqUrl;
    return this;
  }

   /**
   * Link to the developer FAQ
   * @return sdkDeveloperFaqUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Link to the developer FAQ")

  public String getSdkDeveloperFaqUrl() {
    return sdkDeveloperFaqUrl;
  }


  public void setSdkDeveloperFaqUrl(String sdkDeveloperFaqUrl) {
    this.sdkDeveloperFaqUrl = sdkDeveloperFaqUrl;
  }


  public APIConfig sdkDiscordUrl(String sdkDiscordUrl) {
    
    this.sdkDiscordUrl = sdkDiscordUrl;
    return this;
  }

   /**
   * Link to the official VRChat Discord
   * @return sdkDiscordUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Link to the official VRChat Discord")

  public String getSdkDiscordUrl() {
    return sdkDiscordUrl;
  }


  public void setSdkDiscordUrl(String sdkDiscordUrl) {
    this.sdkDiscordUrl = sdkDiscordUrl;
  }


  public APIConfig sdkNotAllowedToPublishMessage(String sdkNotAllowedToPublishMessage) {
    
    this.sdkNotAllowedToPublishMessage = sdkNotAllowedToPublishMessage;
    return this;
  }

   /**
   * Used in the SDK to notify a user they aren&#39;t allowed to upload avatars/worlds yet
   * @return sdkNotAllowedToPublishMessage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Used in the SDK to notify a user they aren't allowed to upload avatars/worlds yet")

  public String getSdkNotAllowedToPublishMessage() {
    return sdkNotAllowedToPublishMessage;
  }


  public void setSdkNotAllowedToPublishMessage(String sdkNotAllowedToPublishMessage) {
    this.sdkNotAllowedToPublishMessage = sdkNotAllowedToPublishMessage;
  }


  public APIConfig sdkUnityVersion(String sdkUnityVersion) {
    
    this.sdkUnityVersion = sdkUnityVersion;
    return this;
  }

   /**
   * Unity version supported by the SDK
   * @return sdkUnityVersion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unity version supported by the SDK")

  public String getSdkUnityVersion() {
    return sdkUnityVersion;
  }


  public void setSdkUnityVersion(String sdkUnityVersion) {
    this.sdkUnityVersion = sdkUnityVersion;
  }


  public APIConfig serverName(String serverName) {
    
    this.serverName = serverName;
    return this;
  }

   /**
   * Server name of the API server currently responding
   * @return serverName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Server name of the API server currently responding")

  public String getServerName() {
    return serverName;
  }


  public void setServerName(String serverName) {
    this.serverName = serverName;
  }


  public APIConfig supportEmail(String supportEmail) {
    
    this.supportEmail = supportEmail;
    return this;
  }

   /**
   * VRChat&#39;s support email
   * @return supportEmail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "VRChat's support email")

  public String getSupportEmail() {
    return supportEmail;
  }


  public void setSupportEmail(String supportEmail) {
    this.supportEmail = supportEmail;
  }


  public APIConfig timeOutWorldId(String timeOutWorldId) {
    
    this.timeOutWorldId = timeOutWorldId;
    return this;
  }

   /**
   * WorldID be \&quot;offline\&quot; on User profiles if you are not friends with that user.
   * @return timeOutWorldId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "wrld_ba913a96-fac4-4048-a062-9aa5db092812", required = true, value = "WorldID be \"offline\" on User profiles if you are not friends with that user.")

  public String getTimeOutWorldId() {
    return timeOutWorldId;
  }


  public void setTimeOutWorldId(String timeOutWorldId) {
    this.timeOutWorldId = timeOutWorldId;
  }


  public APIConfig tutorialWorldId(String tutorialWorldId) {
    
    this.tutorialWorldId = tutorialWorldId;
    return this;
  }

   /**
   * WorldID be \&quot;offline\&quot; on User profiles if you are not friends with that user.
   * @return tutorialWorldId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "wrld_ba913a96-fac4-4048-a062-9aa5db092812", required = true, value = "WorldID be \"offline\" on User profiles if you are not friends with that user.")

  public String getTutorialWorldId() {
    return tutorialWorldId;
  }


  public void setTutorialWorldId(String tutorialWorldId) {
    this.tutorialWorldId = tutorialWorldId;
  }


  public APIConfig updateRateMsMaximum(Integer updateRateMsMaximum) {
    
    this.updateRateMsMaximum = updateRateMsMaximum;
    return this;
  }

   /**
   * Unknown
   * @return updateRateMsMaximum
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getUpdateRateMsMaximum() {
    return updateRateMsMaximum;
  }


  public void setUpdateRateMsMaximum(Integer updateRateMsMaximum) {
    this.updateRateMsMaximum = updateRateMsMaximum;
  }


  public APIConfig updateRateMsMinimum(Integer updateRateMsMinimum) {
    
    this.updateRateMsMinimum = updateRateMsMinimum;
    return this;
  }

   /**
   * Unknown
   * @return updateRateMsMinimum
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getUpdateRateMsMinimum() {
    return updateRateMsMinimum;
  }


  public void setUpdateRateMsMinimum(Integer updateRateMsMinimum) {
    this.updateRateMsMinimum = updateRateMsMinimum;
  }


  public APIConfig updateRateMsNormal(Integer updateRateMsNormal) {
    
    this.updateRateMsNormal = updateRateMsNormal;
    return this;
  }

   /**
   * Unknown
   * @return updateRateMsNormal
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getUpdateRateMsNormal() {
    return updateRateMsNormal;
  }


  public void setUpdateRateMsNormal(Integer updateRateMsNormal) {
    this.updateRateMsNormal = updateRateMsNormal;
  }


  public APIConfig updateRateMsUdonManual(Integer updateRateMsUdonManual) {
    
    this.updateRateMsUdonManual = updateRateMsUdonManual;
    return this;
  }

   /**
   * Unknown
   * @return updateRateMsUdonManual
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getUpdateRateMsUdonManual() {
    return updateRateMsUdonManual;
  }


  public void setUpdateRateMsUdonManual(Integer updateRateMsUdonManual) {
    this.updateRateMsUdonManual = updateRateMsUdonManual;
  }


  public APIConfig uploadAnalysisPercent(Integer uploadAnalysisPercent) {
    
    this.uploadAnalysisPercent = uploadAnalysisPercent;
    return this;
  }

   /**
   * Unknown
   * @return uploadAnalysisPercent
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getUploadAnalysisPercent() {
    return uploadAnalysisPercent;
  }


  public void setUploadAnalysisPercent(Integer uploadAnalysisPercent) {
    this.uploadAnalysisPercent = uploadAnalysisPercent;
  }


  public APIConfig urlList(List<String> urlList) {
    
    this.urlList = urlList;
    return this;
  }

  public APIConfig addUrlListItem(String urlListItem) {
    this.urlList.add(urlListItem);
    return this;
  }

   /**
   * List of allowed URLs that bypass the \&quot;Allow untrusted URL&#39;s\&quot; setting in-game
   * @return urlList
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "List of allowed URLs that bypass the \"Allow untrusted URL's\" setting in-game")

  public List<String> getUrlList() {
    return urlList;
  }


  public void setUrlList(List<String> urlList) {
    this.urlList = urlList;
  }


  public APIConfig useReliableUdpForVoice(Boolean useReliableUdpForVoice) {
    
    this.useReliableUdpForVoice = useReliableUdpForVoice;
    return this;
  }

   /**
   * Unknown
   * @return useReliableUdpForVoice
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Boolean getUseReliableUdpForVoice() {
    return useReliableUdpForVoice;
  }


  public void setUseReliableUdpForVoice(Boolean useReliableUdpForVoice) {
    this.useReliableUdpForVoice = useReliableUdpForVoice;
  }


  public APIConfig userUpdatePeriod(Integer userUpdatePeriod) {
    
    this.userUpdatePeriod = userUpdatePeriod;
    return this;
  }

   /**
   * Unknown
   * @return userUpdatePeriod
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getUserUpdatePeriod() {
    return userUpdatePeriod;
  }


  public void setUserUpdatePeriod(Integer userUpdatePeriod) {
    this.userUpdatePeriod = userUpdatePeriod;
  }


  public APIConfig userVerificationDelay(Integer userVerificationDelay) {
    
    this.userVerificationDelay = userVerificationDelay;
    return this;
  }

   /**
   * Unknown
   * @return userVerificationDelay
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getUserVerificationDelay() {
    return userVerificationDelay;
  }


  public void setUserVerificationDelay(Integer userVerificationDelay) {
    this.userVerificationDelay = userVerificationDelay;
  }


  public APIConfig userVerificationRetry(Integer userVerificationRetry) {
    
    this.userVerificationRetry = userVerificationRetry;
    return this;
  }

   /**
   * Unknown
   * @return userVerificationRetry
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getUserVerificationRetry() {
    return userVerificationRetry;
  }


  public void setUserVerificationRetry(Integer userVerificationRetry) {
    this.userVerificationRetry = userVerificationRetry;
  }


  public APIConfig userVerificationTimeout(Integer userVerificationTimeout) {
    
    this.userVerificationTimeout = userVerificationTimeout;
    return this;
  }

   /**
   * Unknown
   * @return userVerificationTimeout
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getUserVerificationTimeout() {
    return userVerificationTimeout;
  }


  public void setUserVerificationTimeout(Integer userVerificationTimeout) {
    this.userVerificationTimeout = userVerificationTimeout;
  }


  public APIConfig viveWindowsUrl(String viveWindowsUrl) {
    
    this.viveWindowsUrl = viveWindowsUrl;
    return this;
  }

   /**
   * Download link for game on the Steam website.
   * @return viveWindowsUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Download link for game on the Steam website.")

  public String getViveWindowsUrl() {
    return viveWindowsUrl;
  }


  public void setViveWindowsUrl(String viveWindowsUrl) {
    this.viveWindowsUrl = viveWindowsUrl;
  }


  public APIConfig whiteListedAssetUrls(List<String> whiteListedAssetUrls) {
    
    this.whiteListedAssetUrls = whiteListedAssetUrls;
    return this;
  }

  public APIConfig addWhiteListedAssetUrlsItem(String whiteListedAssetUrlsItem) {
    this.whiteListedAssetUrls.add(whiteListedAssetUrlsItem);
    return this;
  }

   /**
   * List of allowed URLs that are allowed to host avatar assets
   * @return whiteListedAssetUrls
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "List of allowed URLs that are allowed to host avatar assets")

  public List<String> getWhiteListedAssetUrls() {
    return whiteListedAssetUrls;
  }


  public void setWhiteListedAssetUrls(List<String> whiteListedAssetUrls) {
    this.whiteListedAssetUrls = whiteListedAssetUrls;
  }


  public APIConfig worldUpdatePeriod(Integer worldUpdatePeriod) {
    
    this.worldUpdatePeriod = worldUpdatePeriod;
    return this;
  }

   /**
   * Unknown
   * @return worldUpdatePeriod
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getWorldUpdatePeriod() {
    return worldUpdatePeriod;
  }


  public void setWorldUpdatePeriod(Integer worldUpdatePeriod) {
    this.worldUpdatePeriod = worldUpdatePeriod;
  }


  public APIConfig playerUrlResolverHash(String playerUrlResolverHash) {
    
    this.playerUrlResolverHash = playerUrlResolverHash;
    return this;
  }

   /**
   * Currently used youtube-dl.exe hash in SHA-256-delimited format
   * @return playerUrlResolverHash
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Currently used youtube-dl.exe hash in SHA-256-delimited format")

  public String getPlayerUrlResolverHash() {
    return playerUrlResolverHash;
  }


  public void setPlayerUrlResolverHash(String playerUrlResolverHash) {
    this.playerUrlResolverHash = playerUrlResolverHash;
  }


  public APIConfig playerUrlResolverVersion(String playerUrlResolverVersion) {
    
    this.playerUrlResolverVersion = playerUrlResolverVersion;
    return this;
  }

   /**
   * Currently used youtube-dl.exe version
   * @return playerUrlResolverVersion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Currently used youtube-dl.exe version")

  public String getPlayerUrlResolverVersion() {
    return playerUrlResolverVersion;
  }


  public void setPlayerUrlResolverVersion(String playerUrlResolverVersion) {
    this.playerUrlResolverVersion = playerUrlResolverVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIConfig apIConfig = (APIConfig) o;
    return Objects.equals(this.voiceEnableDegradation, apIConfig.voiceEnableDegradation) &&
        Objects.equals(this.voiceEnableReceiverLimiting, apIConfig.voiceEnableReceiverLimiting) &&
        Objects.equals(this.address, apIConfig.address) &&
        Objects.equals(this.announcements, apIConfig.announcements) &&
        Objects.equals(this.appName, apIConfig.appName) &&
        Objects.equals(this.buildVersionTag, apIConfig.buildVersionTag) &&
        Objects.equals(this.clientApiKey, apIConfig.clientApiKey) &&
        Objects.equals(this.clientBPSCeiling, apIConfig.clientBPSCeiling) &&
        Objects.equals(this.clientDisconnectTimeout, apIConfig.clientDisconnectTimeout) &&
        Objects.equals(this.clientReservedPlayerBPS, apIConfig.clientReservedPlayerBPS) &&
        Objects.equals(this.clientSentCountAllowance, apIConfig.clientSentCountAllowance) &&
        Objects.equals(this.contactEmail, apIConfig.contactEmail) &&
        Objects.equals(this.copyrightEmail, apIConfig.copyrightEmail) &&
        Objects.equals(this.currentTOSVersion, apIConfig.currentTOSVersion) &&
        Objects.equals(this.defaultAvatar, apIConfig.defaultAvatar) &&
        Objects.equals(this.deploymentGroup, apIConfig.deploymentGroup) &&
        Objects.equals(this.devAppVersionStandalone, apIConfig.devAppVersionStandalone) &&
        Objects.equals(this.devDownloadLinkWindows, apIConfig.devDownloadLinkWindows) &&
        Objects.equals(this.devSdkUrl, apIConfig.devSdkUrl) &&
        Objects.equals(this.devSdkVersion, apIConfig.devSdkVersion) &&
        Objects.equals(this.devServerVersionStandalone, apIConfig.devServerVersionStandalone) &&
        Objects.equals(this.disCountdown, apIConfig.disCountdown) &&
        Objects.equals(this.disableAvatarCopying, apIConfig.disableAvatarCopying) &&
        Objects.equals(this.disableAvatarGating, apIConfig.disableAvatarGating) &&
        Objects.equals(this.disableCommunityLabs, apIConfig.disableCommunityLabs) &&
        Objects.equals(this.disableCommunityLabsPromotion, apIConfig.disableCommunityLabsPromotion) &&
        Objects.equals(this.disableEmail, apIConfig.disableEmail) &&
        Objects.equals(this.disableEventStream, apIConfig.disableEventStream) &&
        Objects.equals(this.disableFeedbackGating, apIConfig.disableFeedbackGating) &&
        Objects.equals(this.disableFrontendBuilds, apIConfig.disableFrontendBuilds) &&
        Objects.equals(this.disableHello, apIConfig.disableHello) &&
        Objects.equals(this.disableOculusSubs, apIConfig.disableOculusSubs) &&
        Objects.equals(this.disableRegistration, apIConfig.disableRegistration) &&
        Objects.equals(this.disableSteamNetworking, apIConfig.disableSteamNetworking) &&
        Objects.equals(this.disableTwoFactorAuth, apIConfig.disableTwoFactorAuth) &&
        Objects.equals(this.disableUdon, apIConfig.disableUdon) &&
        Objects.equals(this.disableUpgradeAccount, apIConfig.disableUpgradeAccount) &&
        Objects.equals(this.downloadLinkWindows, apIConfig.downloadLinkWindows) &&
        Objects.equals(this.downloadUrls, apIConfig.downloadUrls) &&
        Objects.equals(this.dynamicWorldRows, apIConfig.dynamicWorldRows) &&
        Objects.equals(this.events, apIConfig.events) &&
        Objects.equals(this.gearDemoRoomId, apIConfig.gearDemoRoomId) &&
        Objects.equals(this.homeWorldId, apIConfig.homeWorldId) &&
        Objects.equals(this.homepageRedirectTarget, apIConfig.homepageRedirectTarget) &&
        Objects.equals(this.hubWorldId, apIConfig.hubWorldId) &&
        Objects.equals(this.jobsEmail, apIConfig.jobsEmail) &&
        Objects.equals(this.messageOfTheDay, apIConfig.messageOfTheDay) &&
        Objects.equals(this.moderationEmail, apIConfig.moderationEmail) &&
        Objects.equals(this.moderationQueryPeriod, apIConfig.moderationQueryPeriod) &&
        Objects.equals(this.notAllowedToSelectAvatarInPrivateWorldMessage, apIConfig.notAllowedToSelectAvatarInPrivateWorldMessage) &&
        Objects.equals(this.plugin, apIConfig.plugin) &&
        Objects.equals(this.releaseAppVersionStandalone, apIConfig.releaseAppVersionStandalone) &&
        Objects.equals(this.releaseSdkUrl, apIConfig.releaseSdkUrl) &&
        Objects.equals(this.releaseSdkVersion, apIConfig.releaseSdkVersion) &&
        Objects.equals(this.releaseServerVersionStandalone, apIConfig.releaseServerVersionStandalone) &&
        Objects.equals(this.sdkDeveloperFaqUrl, apIConfig.sdkDeveloperFaqUrl) &&
        Objects.equals(this.sdkDiscordUrl, apIConfig.sdkDiscordUrl) &&
        Objects.equals(this.sdkNotAllowedToPublishMessage, apIConfig.sdkNotAllowedToPublishMessage) &&
        Objects.equals(this.sdkUnityVersion, apIConfig.sdkUnityVersion) &&
        Objects.equals(this.serverName, apIConfig.serverName) &&
        Objects.equals(this.supportEmail, apIConfig.supportEmail) &&
        Objects.equals(this.timeOutWorldId, apIConfig.timeOutWorldId) &&
        Objects.equals(this.tutorialWorldId, apIConfig.tutorialWorldId) &&
        Objects.equals(this.updateRateMsMaximum, apIConfig.updateRateMsMaximum) &&
        Objects.equals(this.updateRateMsMinimum, apIConfig.updateRateMsMinimum) &&
        Objects.equals(this.updateRateMsNormal, apIConfig.updateRateMsNormal) &&
        Objects.equals(this.updateRateMsUdonManual, apIConfig.updateRateMsUdonManual) &&
        Objects.equals(this.uploadAnalysisPercent, apIConfig.uploadAnalysisPercent) &&
        Objects.equals(this.urlList, apIConfig.urlList) &&
        Objects.equals(this.useReliableUdpForVoice, apIConfig.useReliableUdpForVoice) &&
        Objects.equals(this.userUpdatePeriod, apIConfig.userUpdatePeriod) &&
        Objects.equals(this.userVerificationDelay, apIConfig.userVerificationDelay) &&
        Objects.equals(this.userVerificationRetry, apIConfig.userVerificationRetry) &&
        Objects.equals(this.userVerificationTimeout, apIConfig.userVerificationTimeout) &&
        Objects.equals(this.viveWindowsUrl, apIConfig.viveWindowsUrl) &&
        Objects.equals(this.whiteListedAssetUrls, apIConfig.whiteListedAssetUrls) &&
        Objects.equals(this.worldUpdatePeriod, apIConfig.worldUpdatePeriod) &&
        Objects.equals(this.playerUrlResolverHash, apIConfig.playerUrlResolverHash) &&
        Objects.equals(this.playerUrlResolverVersion, apIConfig.playerUrlResolverVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(voiceEnableDegradation, voiceEnableReceiverLimiting, address, announcements, appName, buildVersionTag, clientApiKey, clientBPSCeiling, clientDisconnectTimeout, clientReservedPlayerBPS, clientSentCountAllowance, contactEmail, copyrightEmail, currentTOSVersion, defaultAvatar, deploymentGroup, devAppVersionStandalone, devDownloadLinkWindows, devSdkUrl, devSdkVersion, devServerVersionStandalone, disCountdown, disableAvatarCopying, disableAvatarGating, disableCommunityLabs, disableCommunityLabsPromotion, disableEmail, disableEventStream, disableFeedbackGating, disableFrontendBuilds, disableHello, disableOculusSubs, disableRegistration, disableSteamNetworking, disableTwoFactorAuth, disableUdon, disableUpgradeAccount, downloadLinkWindows, downloadUrls, dynamicWorldRows, events, gearDemoRoomId, homeWorldId, homepageRedirectTarget, hubWorldId, jobsEmail, messageOfTheDay, moderationEmail, moderationQueryPeriod, notAllowedToSelectAvatarInPrivateWorldMessage, plugin, releaseAppVersionStandalone, releaseSdkUrl, releaseSdkVersion, releaseServerVersionStandalone, sdkDeveloperFaqUrl, sdkDiscordUrl, sdkNotAllowedToPublishMessage, sdkUnityVersion, serverName, supportEmail, timeOutWorldId, tutorialWorldId, updateRateMsMaximum, updateRateMsMinimum, updateRateMsNormal, updateRateMsUdonManual, uploadAnalysisPercent, urlList, useReliableUdpForVoice, userUpdatePeriod, userVerificationDelay, userVerificationRetry, userVerificationTimeout, viveWindowsUrl, whiteListedAssetUrls, worldUpdatePeriod, playerUrlResolverHash, playerUrlResolverVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIConfig {\n");
    sb.append("    voiceEnableDegradation: ").append(toIndentedString(voiceEnableDegradation)).append("\n");
    sb.append("    voiceEnableReceiverLimiting: ").append(toIndentedString(voiceEnableReceiverLimiting)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    announcements: ").append(toIndentedString(announcements)).append("\n");
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    buildVersionTag: ").append(toIndentedString(buildVersionTag)).append("\n");
    sb.append("    clientApiKey: ").append(toIndentedString(clientApiKey)).append("\n");
    sb.append("    clientBPSCeiling: ").append(toIndentedString(clientBPSCeiling)).append("\n");
    sb.append("    clientDisconnectTimeout: ").append(toIndentedString(clientDisconnectTimeout)).append("\n");
    sb.append("    clientReservedPlayerBPS: ").append(toIndentedString(clientReservedPlayerBPS)).append("\n");
    sb.append("    clientSentCountAllowance: ").append(toIndentedString(clientSentCountAllowance)).append("\n");
    sb.append("    contactEmail: ").append(toIndentedString(contactEmail)).append("\n");
    sb.append("    copyrightEmail: ").append(toIndentedString(copyrightEmail)).append("\n");
    sb.append("    currentTOSVersion: ").append(toIndentedString(currentTOSVersion)).append("\n");
    sb.append("    defaultAvatar: ").append(toIndentedString(defaultAvatar)).append("\n");
    sb.append("    deploymentGroup: ").append(toIndentedString(deploymentGroup)).append("\n");
    sb.append("    devAppVersionStandalone: ").append(toIndentedString(devAppVersionStandalone)).append("\n");
    sb.append("    devDownloadLinkWindows: ").append(toIndentedString(devDownloadLinkWindows)).append("\n");
    sb.append("    devSdkUrl: ").append(toIndentedString(devSdkUrl)).append("\n");
    sb.append("    devSdkVersion: ").append(toIndentedString(devSdkVersion)).append("\n");
    sb.append("    devServerVersionStandalone: ").append(toIndentedString(devServerVersionStandalone)).append("\n");
    sb.append("    disCountdown: ").append(toIndentedString(disCountdown)).append("\n");
    sb.append("    disableAvatarCopying: ").append(toIndentedString(disableAvatarCopying)).append("\n");
    sb.append("    disableAvatarGating: ").append(toIndentedString(disableAvatarGating)).append("\n");
    sb.append("    disableCommunityLabs: ").append(toIndentedString(disableCommunityLabs)).append("\n");
    sb.append("    disableCommunityLabsPromotion: ").append(toIndentedString(disableCommunityLabsPromotion)).append("\n");
    sb.append("    disableEmail: ").append(toIndentedString(disableEmail)).append("\n");
    sb.append("    disableEventStream: ").append(toIndentedString(disableEventStream)).append("\n");
    sb.append("    disableFeedbackGating: ").append(toIndentedString(disableFeedbackGating)).append("\n");
    sb.append("    disableFrontendBuilds: ").append(toIndentedString(disableFrontendBuilds)).append("\n");
    sb.append("    disableHello: ").append(toIndentedString(disableHello)).append("\n");
    sb.append("    disableOculusSubs: ").append(toIndentedString(disableOculusSubs)).append("\n");
    sb.append("    disableRegistration: ").append(toIndentedString(disableRegistration)).append("\n");
    sb.append("    disableSteamNetworking: ").append(toIndentedString(disableSteamNetworking)).append("\n");
    sb.append("    disableTwoFactorAuth: ").append(toIndentedString(disableTwoFactorAuth)).append("\n");
    sb.append("    disableUdon: ").append(toIndentedString(disableUdon)).append("\n");
    sb.append("    disableUpgradeAccount: ").append(toIndentedString(disableUpgradeAccount)).append("\n");
    sb.append("    downloadLinkWindows: ").append(toIndentedString(downloadLinkWindows)).append("\n");
    sb.append("    downloadUrls: ").append(toIndentedString(downloadUrls)).append("\n");
    sb.append("    dynamicWorldRows: ").append(toIndentedString(dynamicWorldRows)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    gearDemoRoomId: ").append(toIndentedString(gearDemoRoomId)).append("\n");
    sb.append("    homeWorldId: ").append(toIndentedString(homeWorldId)).append("\n");
    sb.append("    homepageRedirectTarget: ").append(toIndentedString(homepageRedirectTarget)).append("\n");
    sb.append("    hubWorldId: ").append(toIndentedString(hubWorldId)).append("\n");
    sb.append("    jobsEmail: ").append(toIndentedString(jobsEmail)).append("\n");
    sb.append("    messageOfTheDay: ").append(toIndentedString(messageOfTheDay)).append("\n");
    sb.append("    moderationEmail: ").append(toIndentedString(moderationEmail)).append("\n");
    sb.append("    moderationQueryPeriod: ").append(toIndentedString(moderationQueryPeriod)).append("\n");
    sb.append("    notAllowedToSelectAvatarInPrivateWorldMessage: ").append(toIndentedString(notAllowedToSelectAvatarInPrivateWorldMessage)).append("\n");
    sb.append("    plugin: ").append(toIndentedString(plugin)).append("\n");
    sb.append("    releaseAppVersionStandalone: ").append(toIndentedString(releaseAppVersionStandalone)).append("\n");
    sb.append("    releaseSdkUrl: ").append(toIndentedString(releaseSdkUrl)).append("\n");
    sb.append("    releaseSdkVersion: ").append(toIndentedString(releaseSdkVersion)).append("\n");
    sb.append("    releaseServerVersionStandalone: ").append(toIndentedString(releaseServerVersionStandalone)).append("\n");
    sb.append("    sdkDeveloperFaqUrl: ").append(toIndentedString(sdkDeveloperFaqUrl)).append("\n");
    sb.append("    sdkDiscordUrl: ").append(toIndentedString(sdkDiscordUrl)).append("\n");
    sb.append("    sdkNotAllowedToPublishMessage: ").append(toIndentedString(sdkNotAllowedToPublishMessage)).append("\n");
    sb.append("    sdkUnityVersion: ").append(toIndentedString(sdkUnityVersion)).append("\n");
    sb.append("    serverName: ").append(toIndentedString(serverName)).append("\n");
    sb.append("    supportEmail: ").append(toIndentedString(supportEmail)).append("\n");
    sb.append("    timeOutWorldId: ").append(toIndentedString(timeOutWorldId)).append("\n");
    sb.append("    tutorialWorldId: ").append(toIndentedString(tutorialWorldId)).append("\n");
    sb.append("    updateRateMsMaximum: ").append(toIndentedString(updateRateMsMaximum)).append("\n");
    sb.append("    updateRateMsMinimum: ").append(toIndentedString(updateRateMsMinimum)).append("\n");
    sb.append("    updateRateMsNormal: ").append(toIndentedString(updateRateMsNormal)).append("\n");
    sb.append("    updateRateMsUdonManual: ").append(toIndentedString(updateRateMsUdonManual)).append("\n");
    sb.append("    uploadAnalysisPercent: ").append(toIndentedString(uploadAnalysisPercent)).append("\n");
    sb.append("    urlList: ").append(toIndentedString(urlList)).append("\n");
    sb.append("    useReliableUdpForVoice: ").append(toIndentedString(useReliableUdpForVoice)).append("\n");
    sb.append("    userUpdatePeriod: ").append(toIndentedString(userUpdatePeriod)).append("\n");
    sb.append("    userVerificationDelay: ").append(toIndentedString(userVerificationDelay)).append("\n");
    sb.append("    userVerificationRetry: ").append(toIndentedString(userVerificationRetry)).append("\n");
    sb.append("    userVerificationTimeout: ").append(toIndentedString(userVerificationTimeout)).append("\n");
    sb.append("    viveWindowsUrl: ").append(toIndentedString(viveWindowsUrl)).append("\n");
    sb.append("    whiteListedAssetUrls: ").append(toIndentedString(whiteListedAssetUrls)).append("\n");
    sb.append("    worldUpdatePeriod: ").append(toIndentedString(worldUpdatePeriod)).append("\n");
    sb.append("    playerUrlResolverHash: ").append(toIndentedString(playerUrlResolverHash)).append("\n");
    sb.append("    playerUrlResolverVersion: ").append(toIndentedString(playerUrlResolverVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("VoiceEnableDegradation");
    openapiFields.add("VoiceEnableReceiverLimiting");
    openapiFields.add("address");
    openapiFields.add("announcements");
    openapiFields.add("appName");
    openapiFields.add("buildVersionTag");
    openapiFields.add("clientApiKey");
    openapiFields.add("clientBPSCeiling");
    openapiFields.add("clientDisconnectTimeout");
    openapiFields.add("clientReservedPlayerBPS");
    openapiFields.add("clientSentCountAllowance");
    openapiFields.add("contactEmail");
    openapiFields.add("copyrightEmail");
    openapiFields.add("currentTOSVersion");
    openapiFields.add("defaultAvatar");
    openapiFields.add("deploymentGroup");
    openapiFields.add("devAppVersionStandalone");
    openapiFields.add("devDownloadLinkWindows");
    openapiFields.add("devSdkUrl");
    openapiFields.add("devSdkVersion");
    openapiFields.add("devServerVersionStandalone");
    openapiFields.add("dis-countdown");
    openapiFields.add("disableAvatarCopying");
    openapiFields.add("disableAvatarGating");
    openapiFields.add("disableCommunityLabs");
    openapiFields.add("disableCommunityLabsPromotion");
    openapiFields.add("disableEmail");
    openapiFields.add("disableEventStream");
    openapiFields.add("disableFeedbackGating");
    openapiFields.add("disableFrontendBuilds");
    openapiFields.add("disableHello");
    openapiFields.add("disableOculusSubs");
    openapiFields.add("disableRegistration");
    openapiFields.add("disableSteamNetworking");
    openapiFields.add("disableTwoFactorAuth");
    openapiFields.add("disableUdon");
    openapiFields.add("disableUpgradeAccount");
    openapiFields.add("downloadLinkWindows");
    openapiFields.add("downloadUrls");
    openapiFields.add("dynamicWorldRows");
    openapiFields.add("events");
    openapiFields.add("gearDemoRoomId");
    openapiFields.add("homeWorldId");
    openapiFields.add("homepageRedirectTarget");
    openapiFields.add("hubWorldId");
    openapiFields.add("jobsEmail");
    openapiFields.add("messageOfTheDay");
    openapiFields.add("moderationEmail");
    openapiFields.add("moderationQueryPeriod");
    openapiFields.add("notAllowedToSelectAvatarInPrivateWorldMessage");
    openapiFields.add("plugin");
    openapiFields.add("releaseAppVersionStandalone");
    openapiFields.add("releaseSdkUrl");
    openapiFields.add("releaseSdkVersion");
    openapiFields.add("releaseServerVersionStandalone");
    openapiFields.add("sdkDeveloperFaqUrl");
    openapiFields.add("sdkDiscordUrl");
    openapiFields.add("sdkNotAllowedToPublishMessage");
    openapiFields.add("sdkUnityVersion");
    openapiFields.add("serverName");
    openapiFields.add("supportEmail");
    openapiFields.add("timeOutWorldId");
    openapiFields.add("tutorialWorldId");
    openapiFields.add("updateRateMsMaximum");
    openapiFields.add("updateRateMsMinimum");
    openapiFields.add("updateRateMsNormal");
    openapiFields.add("updateRateMsUdonManual");
    openapiFields.add("uploadAnalysisPercent");
    openapiFields.add("urlList");
    openapiFields.add("useReliableUdpForVoice");
    openapiFields.add("userUpdatePeriod");
    openapiFields.add("userVerificationDelay");
    openapiFields.add("userVerificationRetry");
    openapiFields.add("userVerificationTimeout");
    openapiFields.add("viveWindowsUrl");
    openapiFields.add("whiteListedAssetUrls");
    openapiFields.add("worldUpdatePeriod");
    openapiFields.add("player-url-resolver-hash");
    openapiFields.add("player-url-resolver-version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("VoiceEnableDegradation");
    openapiRequiredFields.add("VoiceEnableReceiverLimiting");
    openapiRequiredFields.add("address");
    openapiRequiredFields.add("announcements");
    openapiRequiredFields.add("appName");
    openapiRequiredFields.add("buildVersionTag");
    openapiRequiredFields.add("clientApiKey");
    openapiRequiredFields.add("clientBPSCeiling");
    openapiRequiredFields.add("clientDisconnectTimeout");
    openapiRequiredFields.add("clientReservedPlayerBPS");
    openapiRequiredFields.add("clientSentCountAllowance");
    openapiRequiredFields.add("contactEmail");
    openapiRequiredFields.add("copyrightEmail");
    openapiRequiredFields.add("currentTOSVersion");
    openapiRequiredFields.add("defaultAvatar");
    openapiRequiredFields.add("deploymentGroup");
    openapiRequiredFields.add("devAppVersionStandalone");
    openapiRequiredFields.add("devDownloadLinkWindows");
    openapiRequiredFields.add("devSdkUrl");
    openapiRequiredFields.add("devSdkVersion");
    openapiRequiredFields.add("devServerVersionStandalone");
    openapiRequiredFields.add("dis-countdown");
    openapiRequiredFields.add("disableAvatarCopying");
    openapiRequiredFields.add("disableAvatarGating");
    openapiRequiredFields.add("disableCommunityLabs");
    openapiRequiredFields.add("disableCommunityLabsPromotion");
    openapiRequiredFields.add("disableEmail");
    openapiRequiredFields.add("disableEventStream");
    openapiRequiredFields.add("disableFeedbackGating");
    openapiRequiredFields.add("disableFrontendBuilds");
    openapiRequiredFields.add("disableHello");
    openapiRequiredFields.add("disableOculusSubs");
    openapiRequiredFields.add("disableRegistration");
    openapiRequiredFields.add("disableSteamNetworking");
    openapiRequiredFields.add("disableTwoFactorAuth");
    openapiRequiredFields.add("disableUdon");
    openapiRequiredFields.add("disableUpgradeAccount");
    openapiRequiredFields.add("downloadLinkWindows");
    openapiRequiredFields.add("downloadUrls");
    openapiRequiredFields.add("dynamicWorldRows");
    openapiRequiredFields.add("events");
    openapiRequiredFields.add("gearDemoRoomId");
    openapiRequiredFields.add("homeWorldId");
    openapiRequiredFields.add("homepageRedirectTarget");
    openapiRequiredFields.add("hubWorldId");
    openapiRequiredFields.add("jobsEmail");
    openapiRequiredFields.add("messageOfTheDay");
    openapiRequiredFields.add("moderationEmail");
    openapiRequiredFields.add("moderationQueryPeriod");
    openapiRequiredFields.add("notAllowedToSelectAvatarInPrivateWorldMessage");
    openapiRequiredFields.add("plugin");
    openapiRequiredFields.add("releaseAppVersionStandalone");
    openapiRequiredFields.add("releaseSdkUrl");
    openapiRequiredFields.add("releaseSdkVersion");
    openapiRequiredFields.add("releaseServerVersionStandalone");
    openapiRequiredFields.add("sdkDeveloperFaqUrl");
    openapiRequiredFields.add("sdkDiscordUrl");
    openapiRequiredFields.add("sdkNotAllowedToPublishMessage");
    openapiRequiredFields.add("sdkUnityVersion");
    openapiRequiredFields.add("serverName");
    openapiRequiredFields.add("supportEmail");
    openapiRequiredFields.add("timeOutWorldId");
    openapiRequiredFields.add("tutorialWorldId");
    openapiRequiredFields.add("updateRateMsMaximum");
    openapiRequiredFields.add("updateRateMsMinimum");
    openapiRequiredFields.add("updateRateMsNormal");
    openapiRequiredFields.add("updateRateMsUdonManual");
    openapiRequiredFields.add("uploadAnalysisPercent");
    openapiRequiredFields.add("urlList");
    openapiRequiredFields.add("useReliableUdpForVoice");
    openapiRequiredFields.add("userUpdatePeriod");
    openapiRequiredFields.add("userVerificationDelay");
    openapiRequiredFields.add("userVerificationRetry");
    openapiRequiredFields.add("userVerificationTimeout");
    openapiRequiredFields.add("viveWindowsUrl");
    openapiRequiredFields.add("whiteListedAssetUrls");
    openapiRequiredFields.add("worldUpdatePeriod");
    openapiRequiredFields.add("player-url-resolver-hash");
    openapiRequiredFields.add("player-url-resolver-version");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to APIConfig
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!APIConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in APIConfig is not found in the empty JSON string", APIConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!APIConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `APIConfig` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : APIConfig.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("announcements").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `announcements` to be an array in the JSON string but got `%s`", jsonObj.get("announcements").toString()));
      }

      JsonArray jsonArrayannouncements = jsonObj.getAsJsonArray("announcements");
      // validate the required field `announcements` (array)
      for (int i = 0; i < jsonArrayannouncements.size(); i++) {
        APIConfigAnnouncement.validateJsonObject(jsonArrayannouncements.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("appName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appName").toString()));
      }
      if (!jsonObj.get("buildVersionTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buildVersionTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buildVersionTag").toString()));
      }
      if (!jsonObj.get("clientApiKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientApiKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientApiKey").toString()));
      }
      if (!jsonObj.get("contactEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactEmail").toString()));
      }
      if (!jsonObj.get("copyrightEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `copyrightEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("copyrightEmail").toString()));
      }
      if (!jsonObj.get("defaultAvatar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultAvatar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultAvatar").toString()));
      }
      if (!jsonObj.get("devAppVersionStandalone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `devAppVersionStandalone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("devAppVersionStandalone").toString()));
      }
      if (!jsonObj.get("devDownloadLinkWindows").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `devDownloadLinkWindows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("devDownloadLinkWindows").toString()));
      }
      if (!jsonObj.get("devSdkUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `devSdkUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("devSdkUrl").toString()));
      }
      if (!jsonObj.get("devSdkVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `devSdkVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("devSdkVersion").toString()));
      }
      if (!jsonObj.get("devServerVersionStandalone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `devServerVersionStandalone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("devServerVersionStandalone").toString()));
      }
      if (!jsonObj.get("downloadLinkWindows").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `downloadLinkWindows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("downloadLinkWindows").toString()));
      }
      // validate the required field `downloadUrls`
      APIConfigDownloadURLList.validateJsonObject(jsonObj.getAsJsonObject("downloadUrls"));
      // ensure the json data is an array
      if (!jsonObj.get("dynamicWorldRows").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dynamicWorldRows` to be an array in the JSON string but got `%s`", jsonObj.get("dynamicWorldRows").toString()));
      }

      JsonArray jsonArraydynamicWorldRows = jsonObj.getAsJsonArray("dynamicWorldRows");
      // validate the required field `dynamicWorldRows` (array)
      for (int i = 0; i < jsonArraydynamicWorldRows.size(); i++) {
        DynamicContentRow.validateJsonObject(jsonArraydynamicWorldRows.get(i).getAsJsonObject());
      };
      // validate the required field `events`
      APIConfigEvents.validateJsonObject(jsonObj.getAsJsonObject("events"));
      if (!jsonObj.get("gearDemoRoomId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gearDemoRoomId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gearDemoRoomId").toString()));
      }
      if (!jsonObj.get("homeWorldId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homeWorldId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homeWorldId").toString()));
      }
      if (!jsonObj.get("homepageRedirectTarget").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homepageRedirectTarget` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homepageRedirectTarget").toString()));
      }
      if (!jsonObj.get("hubWorldId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hubWorldId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hubWorldId").toString()));
      }
      if (!jsonObj.get("jobsEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobsEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobsEmail").toString()));
      }
      if (!jsonObj.get("messageOfTheDay").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messageOfTheDay` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messageOfTheDay").toString()));
      }
      if (!jsonObj.get("moderationEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `moderationEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("moderationEmail").toString()));
      }
      if (!jsonObj.get("notAllowedToSelectAvatarInPrivateWorldMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notAllowedToSelectAvatarInPrivateWorldMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notAllowedToSelectAvatarInPrivateWorldMessage").toString()));
      }
      if (!jsonObj.get("plugin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `plugin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("plugin").toString()));
      }
      if (!jsonObj.get("releaseAppVersionStandalone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `releaseAppVersionStandalone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("releaseAppVersionStandalone").toString()));
      }
      if (!jsonObj.get("releaseSdkUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `releaseSdkUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("releaseSdkUrl").toString()));
      }
      if (!jsonObj.get("releaseSdkVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `releaseSdkVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("releaseSdkVersion").toString()));
      }
      if (!jsonObj.get("releaseServerVersionStandalone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `releaseServerVersionStandalone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("releaseServerVersionStandalone").toString()));
      }
      if (!jsonObj.get("sdkDeveloperFaqUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sdkDeveloperFaqUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sdkDeveloperFaqUrl").toString()));
      }
      if (!jsonObj.get("sdkDiscordUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sdkDiscordUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sdkDiscordUrl").toString()));
      }
      if (!jsonObj.get("sdkNotAllowedToPublishMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sdkNotAllowedToPublishMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sdkNotAllowedToPublishMessage").toString()));
      }
      if (!jsonObj.get("sdkUnityVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sdkUnityVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sdkUnityVersion").toString()));
      }
      if (!jsonObj.get("serverName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serverName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serverName").toString()));
      }
      if (!jsonObj.get("supportEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supportEmail").toString()));
      }
      if (!jsonObj.get("timeOutWorldId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeOutWorldId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeOutWorldId").toString()));
      }
      if (!jsonObj.get("tutorialWorldId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tutorialWorldId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tutorialWorldId").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("urlList") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("urlList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `urlList` to be an array in the JSON string but got `%s`", jsonObj.get("urlList").toString()));
      }
      if (!jsonObj.get("viveWindowsUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viveWindowsUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viveWindowsUrl").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("whiteListedAssetUrls") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("whiteListedAssetUrls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `whiteListedAssetUrls` to be an array in the JSON string but got `%s`", jsonObj.get("whiteListedAssetUrls").toString()));
      }
      if (!jsonObj.get("player-url-resolver-hash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player-url-resolver-hash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player-url-resolver-hash").toString()));
      }
      if (!jsonObj.get("player-url-resolver-version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player-url-resolver-version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player-url-resolver-version").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!APIConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'APIConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<APIConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(APIConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<APIConfig>() {
           @Override
           public void write(JsonWriter out, APIConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public APIConfig read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of APIConfig given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of APIConfig
  * @throws IOException if the JSON string is invalid with respect to APIConfig
  */
  public static APIConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, APIConfig.class);
  }

 /**
  * Convert an instance of APIConfig to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

